class Solution(object):
    def buildTree(self, preorder, inorder):
        """
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """
        ind_map = {value:index for index, value in enumerate(inorder)}
        
        def build(left_ind, right_ind):
            if left_ind>right_ind: return None
            val = preorder.pop(0)
            #print(left_ind, right_ind)
            root = TreeNode(val)
            ind = ind_map[val]
            root.left = build(left_ind, ind-1)
            root.right = build(ind+1, right_ind)  
            return root
        return build(0,len(inorder)-1)
            
