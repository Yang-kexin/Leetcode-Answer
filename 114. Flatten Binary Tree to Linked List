# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def flatten(self, root: TreeNode) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        
        self.helper(root)
        
    def helper(self, root):
        if not root: return None, None
        
        left_head, left_tail = self.helper(root.left)
        right_head, right_tail = self.helper(root.right)
        
        root.left = None
        tail = root
        
        if left_head != None:
            root.right = left_head
            tail = left_tail
        
        if right_head != None:
            tail.right = right_head
            tail = right_tail
        
        return root, tail
