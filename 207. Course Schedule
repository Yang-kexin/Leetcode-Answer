class Solution(object):
    def canFinish(self, numCourses, prerequisites):
        """
        :type numCourses: int
        :type prerequisites: List[List[int]]
        :rtype: bool
        """
        indegree = [0 for _ in range(numCourses)]
        edges = [[] for _ in range(numCourses)]
        
        for edge in prerequisites:
            indegree[edge[0]] += 1
            edges[edge[1]].append(edge[0])
            
        q = []
        for vertex in range(numCourses):
            if indegree[vertex] == 0:
                q.append(vertex)
        
        course = 0
        while q:
            course += 1
            vertex = q.pop(0)
            for neigh in edges[vertex]:
                indegree[neigh] -= 1
                if indegree[neigh] == 0:
                    q.append(neigh)

        return course == numCourses
